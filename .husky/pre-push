#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

commit_msg_file=".git/COMMIT_EDITMSG"

commit_msg=$(cat "$commit_msg_file")

commit_action_feat="feat"
commit_action_fix="fix"
commit_action_type="type"
commit_action_refactor="refactor"
commit_action_docs="docs"
commit_action_test="test"
commit_action_build="build"
commit_action_etc="etc"


workspace="workspace"
react_ui="react-ui"
react_modules="react-modules"
documents="docs"

echo "Last commit [$commit_msg]."

if (
  [ "$commit_msg" != *"$commit_action_feat"* ] &&
  [ "$commit_msg" != *"$commit_action_fix"* ] &&
  [ "$commit_msg" != *"$commit_action_type"* ] &&
  [ "$commit_msg" != *"$commit_action_refactor"* ] &&
  [ "$commit_msg" != *"$commit_action_docs"* ] &&
  [ "$commit_msg" != *"$commit_action_test"* ] &&
  [ "$commit_msg" != *"$commit_action_build"* ] &&
  [ "$commit_msg" != *"$commit_action_etc"* ]
); then
  echo "커밋 액션을 다시 확인해주세요."
  exit 1
fi

if [[ $commit_msg == *"$workspace"* ]]; then
  # yarn wk:rmo tsc && yarn wk:rui tsc && yarn wk:docs tsc
elif [[ $commit_msg == *"$react_ui"* ]]; then
  yarn wk:rui tsc && yarn wk:rui build
elif [[ $commit_msg == *"$react_modules"* ]]; then
  yarn wk:rmo tsc && yarn wk:rmo build
elif [[ $commit_msg == *"$documents"* ]]; then
  yarn wk:docs tsc && yarn wk:docs build
else 
  echo "커밋 메시지를 다시 확인하세요."
  exit 1
fi

